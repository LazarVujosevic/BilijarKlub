@model BilijarKlub.Models.ZakazivanjeViewModel
@{
    var pocetakTermina = Model.Rezervacija.PocetakTermina?.ToString("yyyy-MM-ddTHH:mm");
    var krajTermina = Model.Rezervacija.KrajTermina?.ToString("yyyy-MM-ddTHH:mm");

    if (Model.Rezervacija.ValidationRulesMessages != null && Model.Rezervacija.ValidationRulesMessages.Count() > 0)
    {
        <table>
            @foreach (var errorMessage in Model.Rezervacija.ValidationRulesMessages)
            {
                <tr>
                    <td>@errorMessage</td>
                </tr>
            }
        </table>
    }
}

@*<table>
        <tr>
            <th> Naziv stola</th>
            <th> Opis Stola</th>
        </tr>
        @foreach (var sto in Model.Stolovi)
        {
            <tr>
                <td>@sto.Naziv</td>
                <td>@sto.Opis</td>
                <td hidden>@sto.Id</td>
            </tr>
        }
    </table>*@
@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{

    <select id="stoSelect" style="margin: 5px" onchange="SetElementsVisibility();" name="@Html.NameFor(m => m.Rezervacija.StoId)">
        <option value="-1">Izabrati sto</option>
        @foreach (var sto in Model.Stolovi)
        {
            string selected = string.Empty;
            if (Model.Rezervacija.StoId != -1)
            {
                if (Model.Rezervacija.StoId == sto.Id)
                {
                    selected = "selected";
                }
            }

            <option value="@sto.Id" @selected>@sto.Naziv</option>
        }
    </select>
    <table hidden>
        @foreach (var item in Model.Stolovi)
        {
            <tr>
                <td>
                    <input type="text" name="@item.Id" value="@item.Id" />
                </td>
            </tr>
        }
    </table>
    @Html.ValidationMessageFor(m => m.Rezervacija.StoId, "", new { @class = "text-danger" })

    <div class="form-group">
        <label id="pocetakTerminaLabel">Pocetak termina:</label>
        <input name="@Html.NameFor(m => m.Rezervacija.PocetakTermina)" id="datetimepicker" type="datetime-local" value="@pocetakTermina">

        @Html.ValidationMessageFor(m => m.Rezervacija.PocetakTermina, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label id="krajTerminaLabel">Kraj termina:</label>
        <input name="@Html.NameFor(m => m.Rezervacija.KrajTermina)" id="krajTerminaInput" type="datetime-local" value="@krajTermina">
        @Html.ValidationMessageFor(m => m.Rezervacija.KrajTermina, "", new { @class = "text-danger" })
    </div>

    if (Model.Rezervacija.ValidationRulesMessages != null && Model.Rezervacija.ValidationRulesMessages.Count() > 0)
    {
        <table>
            @foreach (var errorMessage in Model.Rezervacija.ValidationRulesMessages)
            {
                <tr>
                    <td style="color: red">@errorMessage</td>
                </tr>
            }
        </table>
        <br>
    }

    <button type="submit" id="submitButton">Sacuvaj</button>
    <button id="callSignalButton" hidden></button>
    <ul id="testLabel"></ul>
}


@*<div class="jumbotron">
        <h1>ASP.NET</h1>
        <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
        <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
    </div>

    <div class="row">
        <div class="col-md-4">
            <h2>Getting started</h2>
            <p>
                ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
                enables a clean separation of concerns and gives you full control over markup
                for enjoyable, agile development.
            </p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Get more libraries</h2>
            <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Web Hosting</h2>
            <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
        </div>
    </div>*@


<script>
    function pozoviSignalDugme() {
        document.getElementById('callSignalButton').click();
    }
</script>
@section scripts{

    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/termini.js"></script>
}

